{"createdAt":"2025-07-18T03:42:11.734Z","updatedAt":"2025-07-18T03:42:11.734Z","id":"uNrCTxLvu1cIMVra","name":"Scraper","active":false,"isArchived":false,"nodes":[{"parameters":{},"id":"1d0ef3cf-e6f5-4043-9d9c-9ae02ac7a70a","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1,"position":[-1264,160]},{"parameters":{"url":"=https://www.google.com/maps/search/{{ $json['combinación'] }}","options":{}},"id":"da207116-2317-40ca-bdb1-6c87676375cb","name":"Scrape","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1008,160]},{"parameters":{"content":"","height":200,"width":180,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1040,128],"id":"542e1d82-d50f-4a42-8738-d1127cfcb87f","name":"Sticky Note2"},{"parameters":{"content":"","height":200,"width":220},"type":"n8n-nodes-base.stickyNote","position":[-1328,128],"typeVersion":1,"id":"108797c8-4c61-4e54-9694-a1e86ef95b33","name":"Sticky Note"},{"parameters":{"content":"","height":200,"width":740,"color":4},"type":"n8n-nodes-base.stickyNote","position":[-800,128],"typeVersion":1,"id":"c6e584ac-76e9-48dc-a786-be50a4a3c925","name":"Sticky Note14"},{"parameters":{"content":"","height":200,"width":180,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,240],"id":"cb038f79-a12d-4d21-858f-ace15f68edc5","name":"Sticky Note3"},{"parameters":{"content":"","height":200,"width":340,"color":4},"type":"n8n-nodes-base.stickyNote","position":[240,240],"typeVersion":1,"id":"88441fde-cb93-4d25-926f-d11ef1ef0915","name":"Sticky Note15"},{"parameters":{"content":"","height":200,"width":1240,"color":4},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"ec855b0a-adc6-4b79-b54f-98effe871f44","name":"Sticky Note16"},{"parameters":{"jsCode":"const data = $input.first().json.data\n \nconst regex = /https?:\\/\\/[^\\/]+/g\n \nurls = data.match(regex)\n \nreturn urls.map(url => ({json: {url: url}}))"},"id":"af961668-d085-4e0c-bd00-0e3118c739c7","name":"Extraer URLs","type":"n8n-nodes-base.code","typeVersion":2,"position":[-768,160]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"bf0a5053-9660-457c-9581-964793bb6d7d","leftValue":"={{ $json.url }}","rightValue":"schema","operator":{"type":"string","operation":"notContains"}},{"id":"9110b9e0-12aa-45cc-bde0-9eda8c10970e","leftValue":"={{ $json.url }}","rightValue":"google","operator":{"type":"string","operation":"notContains"}},{"id":"fb9b6ed6-96a5-4560-ab10-b8a4b9a61a2b","leftValue":"={{ $json.url }}","rightValue":"gg","operator":{"type":"string","operation":"notContains"}},{"id":"10500c0b-cdbd-4816-aba3-df60d69845dc","leftValue":"={{ $json.url }}","rightValue":"gstatic","operator":{"type":"string","operation":"notContains"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.filter","typeVersion":2.2,"position":[-576,160],"id":"18e35345-34ef-4a43-b78a-a108baaa9383","name":"Filtrar  URLs","alwaysOutputData":true},{"parameters":{"compare":"selectedFields","fieldsToCompare":"url","options":{}},"id":"5ffdc0b8-b664-4f94-84c6-5bd689ed4ebc","name":"Eliminar Duplicados","type":"n8n-nodes-base.removeDuplicates","typeVersion":2,"position":[-400,160]},{"parameters":{"options":{}},"id":"90a10797-a234-4b9c-9605-66c5ffd571fc","name":"Loop","type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-224,160],"onError":"continueErrorOutput"},{"parameters":{"url":"={{ $json.url }}","options":{}},"id":"65219413-8d27-4f76-9357-025fe88362bd","name":"Scrape #1","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[48,288],"onError":"continueRegularOutput"},{"parameters":{"options":{}},"id":"c63bf470-defa-4e4c-9435-551145a5304e","name":"Loop #2","type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[288,288],"onError":"continueErrorOutput"},{"parameters":{"jsCode":"const data = $json.data\n \nconst emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(?!png|jpg|gif|jpeg)[a-zA-Z]{2,}/g\n \nemails = data.match(emailRegex)\n \nconsole.log(emails)\n \nreturn {json: {emails: emails}}"},"id":"cc2b1c94-752c-4d8b-91a7-eea2fa86ddce","name":"Extraer Mails","type":"n8n-nodes-base.code","typeVersion":2,"position":[448,288],"onError":"continueRegularOutput"},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"emails"}]},"options":{"mergeLists":true}},"id":"62d4b339-950e-4348-abde-0100e13f7d9b","name":"Juntar","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[48,48]},{"parameters":{"fieldToSplitOut":"emails","options":{}},"id":"50abd104-07f8-4c34-8ed9-c4c31382adbd","name":"Separar","type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[224,48],"alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"compare":"selectedFields","fieldsToCompare":"emails","options":{}},"id":"3b2fbd51-29ea-47eb-9f7f-2d6788f7f4e3","name":"Eliminar Duplicados #2","type":"n8n-nodes-base.removeDuplicates","typeVersion":2,"position":[400,48],"alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"documentId":{"__rl":true,"value":"1fpu7U2lmLrM6hKUWqHs1tECd8tjYHgC_W6oNoH0fYjU","mode":"list","cachedResultName":"Scrape","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1fpu7U2lmLrM6hKUWqHs1tECd8tjYHgC_W6oNoH0fYjU/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1fpu7U2lmLrM6hKUWqHs1tECd8tjYHgC_W6oNoH0fYjU/edit#gid=0"},"filtersUI":{"values":[{"lookupColumn":"Correos Electrónicos","lookupValue":"={{ $json.emails }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[720,48],"id":"8319b8d5-7386-4b1e-b6cf-acc5c24beee1","name":"Comprobar Correos","alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"jsCode":"// 1. Items\nconst elimItems  = $items('Eliminar Basura');\nconst comprItems = $items('Comprobar Correos');\n\n// 2. Extraer y normalizar correos de elimItems (propiedad \"emails\")\nconst elimEmails = elimItems\n  .map(i => {\n    const raw = i.json.emails;             // <-- aquí sigue siendo .emails\n    if (typeof raw !== 'string') return null;\n    return decodeURIComponent(raw).trim();\n  })\n  .filter(e => e);\n\n// 3. Extraer y normalizar correos de comprItems (propiedad \"Correos Electrónicos\")\nconst comprEmails = comprItems\n  .map(i => {\n    const raw = i.json['Correos Electrónicos'];\n    if (typeof raw !== 'string') return null;\n    return decodeURIComponent(raw).trim();\n  })\n  .filter(e => e);\n\n// 4. Crear sets en minúsculas\nconst elimSet = new Set(elimEmails.map(e => e.toLowerCase()));\nconst comprSet = new Set(comprEmails.map(e => e.toLowerCase()));\n\n// 5. Calcular diferencia\nconst diferencia = [...elimSet]\n  .filter(emailLc => !comprSet.has(emailLc))\n  .map(emailLc =>\n    elimEmails.find(orig => orig.toLowerCase() === emailLc)\n  );\n\n// 6. Devolver items con la misma clave \"emails\"\nreturn diferencia.map(email => ({\n  json: { emails: email }\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[880,48],"id":"0e31130f-44f5-4b67-b381-b3bc298b1355","name":"Eliminar Correos Existentes","alwaysOutputData":true},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1fpu7U2lmLrM6hKUWqHs1tECd8tjYHgC_W6oNoH0fYjU","mode":"list","cachedResultName":"Scrape","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1fpu7U2lmLrM6hKUWqHs1tECd8tjYHgC_W6oNoH0fYjU/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1fpu7U2lmLrM6hKUWqHs1tECd8tjYHgC_W6oNoH0fYjU/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Correos Electrónicos":"={{ $json.emails }}"},"matchingColumns":["Correos Electrónicos"],"schema":[{"id":"Correos Electrónicos","displayName":"Correos Electrónicos","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1040,48],"id":"0754be2a-a807-48fd-92c7-5d78b8e9ef1a","name":"Base de Datos","alwaysOutputData":true,"onError":"continueRegularOutput"},{"parameters":{"jsCode":"// `items` ya contiene el array de objetos entrante en n8n\n// Cada item tiene la forma { json: { emails: \"…\" }, binary: … }\n\n// Filtramos los que SÍ queremos que continúen por el flujo\nreturn items.filter(item => {\n\tconst email = (item.json.emails || '').toLowerCase();\n\t// Si el email incluye alguna de las extensiones gráficas, lo descartamos\n\treturn !email.match(/\\.(webp|jpe?g|png)$/);\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[560,48],"id":"220da6cd-276e-47de-ab6c-e248700c88dc","name":"Eliminar Basura"},{"parameters":{"workflowId":{"__rl":true,"value":"S0VISLKgxyAGzOLu","mode":"list","cachedResultName":"My workflow 4"},"mode":"each","options":{}},"id":"2d4e3c17-c2e2-490a-bcbc-48ceff828297","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","typeVersion":1.1,"position":[112,752],"onError":"continueRegularOutput"},{"parameters":{"content":"","height":200,"width":220},"type":"n8n-nodes-base.stickyNote","position":[-960,608],"typeVersion":1,"id":"bc76b4dd-1039-47b5-8301-d046f488512d","name":"Sticky Note7"},{"parameters":{"content":"","height":200,"width":280,"color":7},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-688,608],"id":"0852e4b7-4a72-4148-8f89-3cbb94e65a4d","name":"Sticky Note1"},{"parameters":{"promptType":"define","text":"={{ $json.chatInput }}","options":{"systemMessage":"=Prompt para Agente de Generación de Combinaciones para Google Maps\nRol\nEres un agente especializado en la generación de combinaciones de búsqueda optimizadas para Google Maps. Tu función principal es interpretar consultas y generar múltiples variaciones inteligentes que combinen diferentes terminologías, sinónimos y ubicaciones geográficas para maximizar la cobertura y diversidad de resultados.\nContexto\nEl usuario necesita obtener combinaciones de términos de búsqueda (sin la URL completa) que posteriormente utilizará para construir URLs de Google Maps con el formato https://www.google.com/maps/search/[combinación]. El objetivo es realizar scraping exhaustivo explorando todas las variaciones posibles de un negocio o servicio en múltiples ubicaciones.\nTarea\nCuando recibas una consulta de búsqueda, debes:\n\nIdentificar el término principal y extraer sinónimos/variaciones\nAnalizar el ámbito geográfico y expandir ubicaciones relevantes\nCombinar inteligentemente terminologías con ubicaciones\nGenerar aproximadamente 50 combinaciones únicas y diversas\nOptimizar para diferentes formas de buscar el mismo servicio\n\nEspecificaciones\nFormato de salida:\n\nPresentar solo las combinaciones (sin URL completa)\nUsar el formato: término+ubicación\nEspacios reemplazados por \"+\"\nLista numerada de ~50 combinaciones\n\nEstrategias de variación:\nVariaciones terminológicas:\n\nSinónimos profesionales\nTérminos coloquiales\nPlurales y singulares\nEspecializaciones del sector\nTérminos técnicos y comerciales\n\nVariaciones geográficas:\n\nCiudades principales y secundarias\nBarrios y distritos específicos\nComunidades autónomas/regiones\nÁreas metropolitanas\nZonas comerciales conocidas\n\nCombinaciones inteligentes:\n\nCruzar todas las variaciones terminológicas con ubicaciones\nIncluir modificadores de calidad (\"mejor\", \"barato\", \"cerca\")\nAñadir contextos específicos (\"24 horas\", \"urgencias\", \"centro\")\n\nEjemplos\nEntrada: \"dentistas España\"\nSalida:\n\ndentistas+madrid\ndentista+barcelona\nclínica+dental+valencia\nodontólogo+sevilla\nclínicas+dentales+bilbao\ndentistas+centro+madrid\nodontólogos+barcelona\nconsultorio+dental+málaga\ndentista+urgencias+madrid\nclínica+dental+zaragoza\nortodoncista+valencia\nimplantes+dentales+sevilla\ndentistas+24+horas+madrid\nodontología+barcelona\ndentistas+baratos+valencia\nclínica+dental+centro+madrid\ndentistas+salamanca+madrid\nodontólogo+eixample+barcelona\ndentistas+urgencias+sevilla\nclínicas+dentales+málaga\ndentista+niños+madrid\nortodoncista+barcelona\nimplantólogo+valencia\ndentistas+las+palmas\nodontología+infantil+madrid\nclínica+dental+córdoba\ndentistas+santander\nendodoncista+madrid\ndentistas+oviedo\nclínica+dental+granada\ndentistas+vigo\nperiodoncia+madrid\ndentistas+alicante\nortodoncista+sevilla\ndentistas+pamplona\nclínica+dental+murcia\ndentistas+logroño\nimplantes+barcelona\ndentistas+toledo\nodontopediatría+madrid\ndentistas+cáceres\ncirujano+oral+valencia\ndentistas+badajoz\nprótesis+dentales+madrid\ndentistas+albacete\nblanqueamiento+dental+barcelona\ndentistas+cuenca\nmaxilofacial+madrid\ndentistas+guadalajara\nestética+dental+valencia\n\nEntrada: \"restaurantes italianos Madrid\"\nSalida:\n\nrestaurantes+italianos+madrid\npizzería+madrid\ntrattoria+madrid\npasta+madrid\ncomida+italiana+madrid\nristorante+madrid\npizzerías+centro+madrid\nrestaurante+italiano+salamanca\npizza+napoletana+madrid\nosteria+madrid\n[...continúa hasta 50]\n\nNotas\n\nCreatividad terminológica: Incluye términos técnicos, coloquiales y especializaciones del sector\nCobertura geográfica exhaustiva: No te limites a ciudades principales, incluye ciudades medianas y barrios específicos\nVariaciones semánticas: Juega con plurales, singulares, diminutivos y aumentativos\nContexto comercial: Añade modificadores que la gente realmente busca (\"cerca de mí\", \"barato\", \"mejor\", \"urgente\")\nEspecialización: Para servicios profesionales, incluye especializaciones y subespecialidades\nActualidad: Considera términos modernos y tendencias actuales del sector\nDiversidad: Evita repeticiones exactas, cada combinación debe aportar valor único\nVolumen objetivo: Siempre generar aproximadamente 50 combinaciones por consulta\nOptimización local: Incluye barrios y distritos conocidos de las ciudades principales"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[-656,656],"id":"cc0985f1-8e25-497c-a7a3-b988bd21014f","name":"Agente IA"},{"parameters":{"jsCode":"// n8n Code node (JavaScript)\n\n// 1. Obtén el texto del único item de entrada\nconst output = $input.item.json.output;\n\n// 2. Separa en líneas, filtra vacías y quita el prefijo numérico\nconst lines = output\n  .split(/\\r?\\n/)\n  .map(line => line.trim())\n  .filter(line => line.length > 0);\n\n// 3. Mapea cada línea a un item separado con la clave \"combinación\"\nconst results = lines.map(line => {\n  const query = line.replace(/^\\d+\\.\\s*/, '').trim();\n  return { json: { combinación: query } };\n});\n\n// 4. Devuelve el array de 50 items\nreturn results;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-304,656],"id":"1038ce74-9ccb-45a6-b745-d8c50ee60c3b","name":"Agrupar Combinaciones"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-896,656],"id":"23db6005-f1ee-496e-9738-2b30f955a1c4","name":"When chat message received","webhookId":"d0f11c6c-3805-43ab-ba57-7b6fb3d351d2"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-672,896],"id":"7f083c78-29a2-4e31-a519-3848a568431b","name":"Chat GPT1"},{"parameters":{"content":"","width":150,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-560,448],"id":"2463091c-4e79-45ab-a0c9-e30251381d24","name":"Sticky Note4"},{"parameters":{"jsCode":"/**\n * Code node “Siguiente combinación”\n * Devuelve una combinación distinta en cada ejecución.\n */\n\nconst staticData = $getWorkflowStaticData('global');   // <- aquí estaba el fallo\n\n// 1. Cargar la lista solo la primera vez ────────────────────────────────\nif (!staticData.combos) {\n\tstaticData.combos = $input.all().map(i => i.json.combinación);\n\tstaticData.idx = 0;\n}\n\n// 2. Seleccionar la combinación actual ──────────────────────────────────\nconst idx   = staticData.idx ?? 0;          // null-coalescing por si no existe\nconst combo = staticData.combos[idx];\n\nif (!combo) {\n\tthrow new Error('La lista de combinaciones está vacía o no llegó correctamente.');\n}\n\n// 3. Actualizar el índice para la siguiente ejecución ───────────────────\nstaticData.idx = (idx + 1) % staticData.combos.length;\n\n// 4. Salida: un único ítem\nreturn [{ json: { combinación: combo, índice: idx } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-128,656],"id":"0d8043a8-e597-47e8-8fbf-a36be1374200","name":"Set Búsquedas"},{"parameters":{"amount":1,"unit":"minutes"},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[320,752],"id":"cf856f76-f937-44a0-8998-a92a12ba484f","name":"Pausa","webhookId":"89141c62-690e-47a6-ae90-3d59847e5a30"},{"parameters":{"content":"","height":200,"width":360,"color":4},"type":"n8n-nodes-base.stickyNote","position":[-336,608],"typeVersion":1,"id":"b5b2290b-faca-42e7-9512-84f1fcf633d8","name":"Sticky Note5"},{"parameters":{"content":"","height":200,"width":380,"color":4},"type":"n8n-nodes-base.stickyNote","position":[80,720],"typeVersion":1,"id":"96d60e94-fdb0-46a3-80da-ef0599d90b93","name":"Sticky Note17"}],"connections":{"Execute Workflow Trigger":{"main":[[{"node":"Scrape","type":"main","index":0}]]},"Scrape":{"main":[[{"node":"Extraer URLs","type":"main","index":0}]]},"Extraer URLs":{"main":[[{"node":"Filtrar  URLs","type":"main","index":0}]]},"Filtrar  URLs":{"main":[[{"node":"Eliminar Duplicados","type":"main","index":0}]]},"Eliminar Duplicados":{"main":[[{"node":"Loop","type":"main","index":0}]]},"Loop":{"main":[[{"node":"Loop #2","type":"main","index":0}],[{"node":"Scrape #1","type":"main","index":0}]]},"Scrape #1":{"main":[[{"node":"Loop","type":"main","index":0}]]},"Loop #2":{"main":[[{"node":"Juntar","type":"main","index":0}],[{"node":"Extraer Mails","type":"main","index":0}]]},"Extraer Mails":{"main":[[{"node":"Loop #2","type":"main","index":0}]]},"Juntar":{"main":[[{"node":"Separar","type":"main","index":0}]]},"Separar":{"main":[[{"node":"Eliminar Duplicados #2","type":"main","index":0}]]},"Eliminar Duplicados #2":{"main":[[{"node":"Eliminar Basura","type":"main","index":0}]]},"Comprobar Correos":{"main":[[{"node":"Eliminar Correos Existentes","type":"main","index":0}]]},"Eliminar Correos Existentes":{"main":[[{"node":"Base de Datos","type":"main","index":0}]]},"Eliminar Basura":{"main":[[{"node":"Comprobar Correos","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Pausa","type":"main","index":0}]]},"Agente IA":{"main":[[{"node":"Agrupar Combinaciones","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"Agente IA","type":"main","index":0}]]},"Agrupar Combinaciones":{"main":[[{"node":"Set Búsquedas","type":"main","index":0}]]},"Chat GPT1":{"ai_languageModel":[[{"node":"Agente IA","type":"ai_languageModel","index":0}]]},"Set Búsquedas":{"main":[[{"node":"Execute Workflow","type":"main","index":0}]]},"Pausa":{"main":[[{"node":"Set Búsquedas","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"d26ec046-40e3-4fe4-abf8-c79b27887807","triggerCount":0,"shared":[{"createdAt":"2025-07-18T03:42:11.734Z","updatedAt":"2025-07-18T03:42:11.734Z","role":"workflow:owner","workflowId":"uNrCTxLvu1cIMVra","projectId":"n4vHSDQygtGMKCrV"}],"tags":[]}